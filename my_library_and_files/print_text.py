from colorama import init
init()

def greeting_user():
    greeting = '\n\033[32mДобро пожаловать!\033[0m\n'
    return greeting

def main_menu_text():
    menuText = ('\033[32mВы находитесь в главном меню!\033[0m\n'
                '\033[33mЗдесь вы можете выбрать задачу, которую желаете использовать!\033[0m')
    return menuText

def list_of_tasks():
    listOfTasks = ('\n\n\033[34mВот список доступных задач:\033[0m\n'
                   '\nmenu - Выход в главное меню'
                   '\nstop - Завершение работы'
                   '\n0 - Вывод списка задач'
                   '\n1 - Треугольник'
                   '\n2 - Простые или составные числа'
                   '\n3 - Високосный ли год?'
                   '\n4 - Что за число введено?'
                   '\n5 - Ёлочка из звёздочек!'
                   '\n6 - Таблица умножения\n')
    return listOfTasks


def completion_of_work():
    completion = '\n\n\033[32mПрограмма завершает работу!\033[0m\n\n'
    return completion

def error_input():
    errorInput = '\n\n\033[31mНеправильное действие!!!\033[0m\n\n'
    return errorInput

# Треугольник
def triangle_text():
    triangleText = ('\n\033[32mТреугольник существует только тогда, когда сумма любых двух его сторон больше третьей. \033[0m' 
                    '\n\033[32mДано a, b, c - стороны предполагаемого треугольника. \033[0m' 
                    '\n\033[32mТребуется сравнить длину каждого отрезка-стороны с суммой двух других. \033[0m'
                    '\n\033[32mЕсли хотя бы в одном случае отрезок окажется больше суммы двух других, \033[0m'
                    '\n\033[32mто треугольника с такими сторонами не существует. \033[0m'
                    '\n\033[32mОтдельно сообщить является ли треугольник разносторонним, равнобедренным или равносторонним.\033[0m\n\n')
    return triangleText

# Простые или составные числа
def simple_or_complex_text():
    simpleOrComplexText = ('\n\033[32mНапишите код, который запрашивает число и сообщает является ли оно простым или составным.\033[0m'
                            '\n\033[32mИспользуйте правило для проверки:\033[0m'
                            '\n\033[32m“Число является простым, если делится нацело только на единицу и на себя”.\033[0m'
                            '\n\033[32mСделайте ограничение на ввод отрицательных чисел и чисел больше 100 тысяч.\033[0m\n'
                            '\n\033[32mПри вводе 0 пользователь вернётся в меню!\033[0m\n\n')
    return simpleOrComplexText

# Високосный ли год?
def leap_year_text():
    leapYearText = ('\n\033[32mДанная программа запрашивает у пользователя год\033[0m'
                    '\033[32m и проверяет високосный ли год!\033[0m\n'
                    '\n\033[32mПри вводе 0000 пользователь вернётся в меню!\033[0m\n\n')
    return leapYearText

# Что за число введено?
def what_is_the_number_entered_text():
    whatIsTheNumberEnteredText = ('\n\033[32mПользователь вводит число от 1 до 999.\033[0m' 
                                    '\n\033[32mИспользуя операции с числами сообщите что введено:\033[0m' 
                                    '\n\033[32m"цифра, двузначное число или трёхзначное число".\033[0m'
                                    '\n\033[32mПри вводе 0 пользователь вернётся в меню!\033[0m\n\n')
    return whatIsTheNumberEnteredText

# Ёлочка из звёздочек!
def tree_star_text1():
    printText = ('\n\033[32mДанная программа нарисует ёлочку из звёздочек\033[0m'
                  '\033[32m спросив у пользователя количество рядов!\033[0m\n'
                  '\n\033[32mПри вводе 0 пользователь вернётся в меню!\033[0m\n\n')
    return printText

# Таблица умножения
def multiplication_table_text():
    tableText = ('\n\033[32mДанная программа выводит таблицу умножения!\033[0m\n\n')
    return tableText